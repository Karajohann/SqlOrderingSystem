<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>